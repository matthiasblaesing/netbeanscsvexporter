/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.doppel_helix.netbeans.csvexporter.core.actions;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;

public final class TableExporterVisualPanel3 extends JPanel {

    private List<String> errors = new ArrayList<>();
    
    /**
     * Creates new form TableImporterVisualPanel3
     */
    public TableExporterVisualPanel3() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Final";
    }

    public List<String> getErrors() {
        return errors;
    }

    public void setErrors(List<String> errors) {
        this.errors = errors;
        updateMessage();
    }
    
    private void updateMessage() {
        if(errors == null || errors.size() == 0) {
            message.setText("<html><b>Config ok!</b>");
        } else {
            StringBuilder sb = new StringBuilder();
            sb.append("<html><b>Config errors detected:</b><ul>");
            for(String error: errors) {
                sb.append("<li>" + error + "</li>");
            }
            sb.append("</ul>");
            message.setText(sb.toString());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        message = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        message.setFont(message.getFont().deriveFont(message.getFont().getStyle() & ~java.awt.Font.BOLD));
        org.openide.awt.Mnemonics.setLocalizedText(message, org.openide.util.NbBundle.getMessage(TableExporterVisualPanel3.class, "TableExporterVisualPanel3.message.text")); // NOI18N
        message.setToolTipText(org.openide.util.NbBundle.getMessage(TableExporterVisualPanel3.class, "TableExporterVisualPanel3.message.toolTipText")); // NOI18N
        message.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        message.setAlignmentY(0.0F);
        message.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        add(message, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel message;
    // End of variables declaration//GEN-END:variables
}
