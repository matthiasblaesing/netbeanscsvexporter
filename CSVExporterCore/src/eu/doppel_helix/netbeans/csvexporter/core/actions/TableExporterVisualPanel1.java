/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.doppel_helix.netbeans.csvexporter.core.actions;

import eu.doppel_helix.netbeans.csvexporter.core.config.CSVConverterConfig;
import eu.doppel_helix.netbeans.csvexporter.core.converter.CSVConverterFactory;
import eu.doppel_helix.netbeans.csvexporter.core.converter.ConfigDescriptor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.xml.bind.JAXBException;

public final class TableExporterVisualPanel1 extends JPanel {
    /**
     * Creates new form TableImporterVisualPanel1
     */
    public TableExporterVisualPanel1() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Basic configuration";
    }

    public void setConfig(CSVConverterConfig config) {
        baseConfigEditor1.setConfig(config);
    }

    public CSVConverterConfig getConfig() {
        return baseConfigEditor1.getConfig();
    }

    public boolean isResetColumnConverters() {
        return resetColumnConverts.isSelected();
    }

    public void setResetColumnConvertersEnabled(boolean aFlag) {
        resetColumnConverts.setVisible(aFlag);
    }

    public boolean isResetColumnConvertersEnabled() {
        return resetColumnConverts.isVisible();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        baseConfigEditor1 = new eu.doppel_helix.netbeans.csvexporter.core.config.gui.BaseConfigEditor();
        resetColumnConverts = new javax.swing.JCheckBox();
        presetButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(750, 500));
        setPreferredSize(new java.awt.Dimension(750, 500));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(baseConfigEditor1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(resetColumnConverts, org.openide.util.NbBundle.getMessage(TableExporterVisualPanel1.class, "TableExporterVisualPanel1.resetColumnConverts.text")); // NOI18N
        resetColumnConverts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetColumnConvertsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(resetColumnConverts, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(presetButton, org.openide.util.NbBundle.getMessage(TableExporterVisualPanel1.class, "TableExporterVisualPanel1.presetButton.text")); // NOI18N
        presetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(presetButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void resetColumnConvertsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetColumnConvertsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetColumnConvertsActionPerformed

    private void presetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presetButtonActionPerformed
        JPopupMenu popupMenu = new JPopupMenu();
        for (final ConfigDescriptor cd : CSVConverterFactory.getInstance().listSystemConfigs()) {
            JMenuItem jmi = new JMenuItem(cd.getName());
            jmi.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    try {
                        setConfig(CSVConverterFactory.getInstance().readSystemConfig(cd));
                    } catch (JAXBException | IOException ex) {
                        throw new RuntimeException(ex);
                    }
                }
            });
            popupMenu.add(jmi);
        }
        popupMenu.show(presetButton, 0, presetButton.getHeight());
    }//GEN-LAST:event_presetButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private eu.doppel_helix.netbeans.csvexporter.core.config.gui.BaseConfigEditor baseConfigEditor1;
    private javax.swing.JButton presetButton;
    private javax.swing.JCheckBox resetColumnConverts;
    // End of variables declaration//GEN-END:variables
}
